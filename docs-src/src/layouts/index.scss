@import "../../../scss/app";

.CodeMirror.CodeMirror {
  height: auto;
}
.CodeMirror-line.CodeMirror-line {
  font-size: $global-font-size-small;
  line-height: $global-vertical-space;
  padding: 0;
}
.CodeMirror-lines.CodeMirror-lines {
  padding: $global-vertical-space / 4 0;
}
.CodeMirror-scroll {
  margin-left: $global-horizontal-space;
}
.playground {
  display: flex;
  flex-wrap: wrap;
  margin-bottom: $global-vertical-space * 2;
}
.playgroundCode {
  margin-bottom: $global-vertical-space;
  order: 1;
  width: 100%;
}
.playgroundError {
  font-family: monospace;
  overflow-x: scroll;
  white-space: pre-wrap;
  @include panel($padded: true);
  @include alert-color-stack;
}
.playgroundPreview {
  order: 0;
  width: 100%;
}
.playgroundPreview--FakeViewportContainer {
  .playgroundPreview {
    background: $light-gray;
    min-height: 320px;
    min-width: 320px;
    transform: scale(1.0);
    width: 100%;
  }
}
.ColumnExamples {
  .columns {
    text-align: center;
  }
  .columns:nth-child(6n+1) {
    @include color-stack($gray);
  }
  .columns:nth-child(6n+2) {
    @include color-stack($black);
    
  }
  .columns:nth-child(6n+3) {
    @include color-stack($darker-gray);
  }
  .columns:nth-child(6n+4) {
    @include color-stack($dark-gray);
  }
  .columns:nth-child(6n+5) {
    @include color-stack($light-gray);
  }
  .columns:nth-child(6n+6) {
    @include color-stack($lighter-gray);
  }
  .columns .row {
    outline: 1px solid $white;
  }
}
