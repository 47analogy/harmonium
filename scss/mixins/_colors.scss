@mixin body-color-stack {
  background-color: $body-bkgd;
  color: $body-font-color;
}

@mixin body-color-stack-inverted {
  background-color: $body-font-color;
  color: $body-bkgd;
  a {
    @if lightness($anchor-color) > 50% {}
    @else {
      color: $anchor-color-inverse;
      &:hover {
        color: $anchor-color-inverse-hover;
      }
      &:active {
        color: $anchor-color-inverse-active;
      }
    }
  }
}

$navigation-bkgd: $black-0;
$navigation-bkgd-hover: $black-0;
$navigation-bkgd-click: $black-10;
$navigation-bkgd-active: $black-05;

$navigation-color: $anchor-color;
$navigation-color-hover: brighten($anchor-color, 10%);
$navigation-color-click: brighten($anchor-color, 10%);
$navigation-color-active: brighten($anchor-color, 10%);

$navigation-inverse-bkgd: $white-0;
$navigation-inverse-bkgd-hover: $white-0;
$navigation-inverse-bkgd-click: $white-20;
$navigation-inverse-bkgd-active: $white-10;

$navigation-inverse-color: $anchor-color;
$navigation-inverse-color-hover: brighten($anchor-color, 10%);
$navigation-inverse-color-click: brighten($anchor-color, 10%);
$navigation-inverse-color-active: brighten($anchor-color, 10%);

@mixin navigation-color-management {
  a {
    background: $navigation-bkgd;
    color: $navigation-color;
    &:hover {
      background: $navigation-bkgd-hover;
      color: $navigation-color-hover;
    }
    &:active {
      background: $navigation-bkgd-click;
      color: $navigation-color-click;
    }
  }
  &[class*='--active'] {
    a {
      background: $navigation-bkgd-active;
      color: $navigation-color-active;
    }
  }
}
@mixin navigation-color-management-inverse {
  a {
    background: $navigation-inverse-bkgd;
    color: $navigation-inverse-color;
    &:hover {
      background: $navigation-inverse-bkgd-hover;
      color: $navigation-inverse-color-hover;
    }
    &:active {
      background: $navigation-inverse-bkgd-click;
      color: $navigation-inverse-color-click;
    }
  }
  &[class*='--active'] {
    a {
      background: $navigation-inverse-bkgd-active;
      color: $navigation-inverse-color-active;
    }
  }
}


$color-list: primary, secondary, tertiary, accent, success, alert, warning, error;
$color-vars: $primary, $secondary, $tertiary, $accent, $success, $alert, $warning, $error;

@mixin color-management {
  // by default we give most things the $primary bkgd-color
  @for $i from 1 through length($color-list) {
    background: $primary;
    @if lightness($primary) > 50% {
      color: $brand-dark;
    }
    @else {
      color: $brand-light;
    }
    // for components that use color vars as props, we find the lightness
    // of the bkgd-color and adjust the font-color accordingly
    &--#{nth($color-list, $i)} {
      background: nth($color-vars, $i);
      @if lightness(nth($color-vars, $i)) > 50% {
        color: $brand-dark;
      }
      @else {
        color: $brand-light;
      }
    }
  }
}
