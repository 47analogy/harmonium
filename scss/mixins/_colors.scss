@mixin body-color-stack {
  background-color: $body-bkgd;
  color: $body-font-color;
}

@mixin body-color-stack-inverted {
  background-color: $body-font-color;
  color: $body-bkgd;
  a {
    @if lightness($anchor-color) > 50% {}
    @else {
      color: $anchor-color-inverse;
      &:hover {
        color: $anchor-color-inverse-hover;
      }
      &:active {
        color: $anchor-color-inverse-active;
      }
    }
  }
}
$navigation-bkgd-hover: $black-025;
@mixin navigation-color-management {
  a {
    &:hover {
      background: $navigation-bkgd-hover;
    }
    &:active {
      background: opacify($navigation-bkgd-hover, 0.08);
    }
  }
  &[class*='--active'] a,
  &:focus {
    background: opacify($navigation-bkgd-hover, 0.05);
  }
}




$color-list: primary, secondary, tertiary, accent, success, alert, warning, error;
$color-vars: $primary, $secondary, $tertiary, $accent, $success, $alert, $warning, $error;

@mixin color-management {
  // by default we give most things the $primary bkgd-color
  @for $i from 1 through length($color-list) {
    background: $primary;
    @if lightness($primary) > 50% {
      color: $brand-dark;
    }
    @else {
      color: $brand-light;
    }
    // for components that use color vars as props, we find the lightness
    // of the bkgd-color and adjust the font-color accordingly
    &--#{nth($color-list, $i)} {
      background: nth($color-vars, $i);
      @if lightness(nth($color-vars, $i)) > 50% {
        color: $brand-dark;
      }
      @else {
        color: $brand-light;
      }
    }
  }
}

@mixin muted {
  opacity: 0.5;
}
@mixin disabled {
  opacity: 0.35;
}
