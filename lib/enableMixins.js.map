{"version":3,"sources":["../src/enableMixins.js"],"names":[],"mappings":";;;;;;kBAUe,UAAS,GAAG,EAAE;;AAE3B,WAAS,kBAAkB,CAAC,MAAM,EAAE;AAClC,QAAI,SAAS,GAAG,MAAM,CAAC,MAAM,IAAI,EAAE,CAAC;AACpC,aAAS,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAChC,WAAO,qBAAE,IAAI,CAAC,SAAS,CAAC,CAAC;GAC1B;;AAED,WAAS,YAAY,CAAC,MAAM,EAAE,EAAE,EAAE;AAChC,QAAI,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;AAChB,QAAI,SAAS,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC;AAC3C,KAAC,GAAG,SAAS,CAAC,MAAM,CAAC;AACrB,SAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACrB,WAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AACrB,QAAE,CAAC,KAAK,CAAC,CAAC;KACX;GACF;;AAED,WAAS,uBAAuB,CAAC,eAAe,EAAE;AAChD,WAAO,UAAS,IAAI,EAAE,MAAM,EAAE;AAC5B,UAAI,cAAc,GAAG,AAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAE,IAAI,EAAE,MAAM,CAAC,CAAC;AAC/D,UAAG,OAAO,MAAM,KAAK,UAAU,EAAE;;AAE/B,oBAAY,CAAC,MAAM,EAAE,UAAS,KAAK,EAAC;AAClC,8CAAqB,cAAc,EAAE,KAAK,CAAC,CAAC;SAC7C,CAAC,CAAC;OACJ;KACF,CAAA;GACF;;AAED,KAAG,CAAC,YAAY,GAAG,uBAAuB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AAC7D,KAAG,CAAC,iBAAiB,GAAG,uBAAuB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;;AAEvE,KAAG,CAAC,UAAU,GAAG,uBAAuB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACzD,KAAG,CAAC,eAAe,GAAG,uBAAuB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;CAEpE","file":"enableMixins.js","sourcesContent":["import _ from 'underscore'\nimport mixSpecIntoComponent from './mixSpecIntoComponent'\n\n/* This optional extension re-enables the React mixin system for plain JS\n * classes, e.g. ES6 classes, Backbone classes, ES3 module pattern classes\n * You require the extension like `//= require revelry/extensions/mixins` and\n * then you just use appComponent and revComponent like normal.\n * Internally, this works by wrapping the appComponent and revComponent methods\n * in a function closure which actually does the mixing in, since React punts.\n */\nexport default function(Rev) {\n\n  function mixinListForObject(object) {\n    var mixinList = object.mixins || [];\n    mixinList.push(Rev.Mixins.Core);\n    return _.uniq(mixinList);\n  }\n\n  function forEachMixin(object, fn) {\n    var mixin, i, l;\n    var mixinList = mixinListForObject(object);\n    l = mixinList.length;\n    for(i = 0; i < l; i++) {\n      mixin = mixinList[i];\n      fn(mixin);\n    }\n  }\n\n  function decorateComponentMethod(componentMethod) {\n    return function(name, object) {\n      var componentClass = (componentMethod.bind(Rev))(name, object);\n      if(typeof object === 'function') {\n        // ES6 class\n        forEachMixin(object, function(mixin){\n          mixSpecIntoComponent(componentClass, mixin);\n        });\n      }\n    }\n  }\n\n  Rev.appComponent = decorateComponentMethod(Rev.appComponent);\n  Rev.registerComponent = decorateComponentMethod(Rev.registerComponent);\n\n  Rev.appExample = decorateComponentMethod(Rev.appExample);\n  Rev.registerExample = decorateComponentMethod(Rev.registerExample);\n\n}\n"]}