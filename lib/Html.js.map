{"version":3,"sources":["../src/Html.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIqB,IAAI;YAAJ,IAAI;;WAAJ,IAAI;0BAAJ,IAAI;;kEAAJ,IAAI;;;eAAJ,IAAI;;6BAsBd;mBAC4B,IAAI,CAAC,KAAK;UAAtC,MAAM,UAAN,MAAM;UAAE,SAAS,UAAT,SAAS;UAAE,KAAK,UAAL,KAAK;;AAC/B,UAAM,OAAO,GAAG,SAAS,GAAG,iBAAS,cAAc,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;;AAEpE,aACE;;UAAM,IAAI,EAAC,OAAO;QAEhB;;;UACG,4BAAa,aAAa,EAAE;UAE7B,wCAAM,GAAG,EAAC,eAAe,EAAC,IAAI,EAAC,cAAc,GAAG;UAChD,wCAAM,IAAI,EAAC,UAAU,EAAC,OAAO,EAAC,qCAAqC,GAAG;UAGrE,IAAI,CAAC,WAAW;UAMf,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,GAAG,yCAAO,uBAAuB,EAAE,EAAC,MAAM,EAAE,OAAO,CAAC,8BAA8B,CAAC,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC,MAAM,EAAC,AAAC,GAAE,GAAG,IAAI;SACjL;QAEP;;;UACE,uCAAK,EAAE,EAAC,SAAS,EAAC,uBAAuB,EAAE,EAAC,MAAM,EAAE,OAAO,EAAC,AAAC,GAAE;UAC/D;AACE,mCAAuB,EAAE,EAAC,MAAM,qBAAmB,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,MAAG,EAAC,AAAC;AACnF,mBAAO,EAAC,OAAO;YACf;UACF,0CAAQ,GAAG,EAAE,MAAM,CAAC,UAAU,CAAC,IAAI,AAAC,EAAC,OAAO,EAAC,OAAO,GAAE;SACjD;OAEF,CACP;KACH;;;wBAhDiB;UACT,MAAM,GAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAA3B,MAAM;;AACb,aAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG;eACjC;AACE,cAAI,EAAE,MAAM,CAAC,GAAG,CAAC,AAAC;AAClB,aAAG,EAAE,GAAG,AAAC;AACT,eAAK,EAAC,oBAAoB;AAC1B,aAAG,EAAC,YAAY;AAChB,cAAI,EAAC,UAAU;AACf,iBAAO,EAAC,OAAO;UACf;OACH,CAAC,CAAA;KACH;;;SApBkB,IAAI;UAJV,SAAS;;AAIH,IAAI,CAEhB,SAAS,GAAG;AACjB,QAAM,EAAE,OAPc,SAAS,CAOb,MAAM;AACxB,WAAS,EAAE,OARW,SAAS,CAQV,IAAI;AACzB,OAAK,EAAE,OATe,SAAS,CASd,MAAM;CACxB;kBANkB,IAAI","file":"Html.js","sourcesContent":["import React, {Component, PropTypes} from 'react';\nimport ReactDOM from 'react-dom/server';\nimport DocumentMeta from 'react-document-meta';\n\nexport default class Html extends Component {\n\n  static propTypes = {\n    assets: PropTypes.object,\n    component: PropTypes.node,\n    store: PropTypes.object\n  }\n\n  get stylesheets() {\n    const {styles} = this.props.assets\n    return Object.keys(styles).map((key) => (\n      <link\n        href={styles[key]}\n        key={key}\n        media=\"screen, projection\"\n        rel=\"stylesheet\"\n        type=\"text/css\"\n        charSet=\"UTF-8\"\n      />\n    ))\n  }\n\n  render() {\n    const {assets, component, store} = this.props;\n    const content = component ? ReactDOM.renderToString(component) : '';\n\n    return (\n      <html lang=\"en-us\">\n\n        <head>\n          {DocumentMeta.renderAsReact()}\n\n          <link rel=\"shortcut icon\" href=\"/favicon.ico\" />\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\n          {/* styles (will be present only in production with webpack extract text plugin) */}\n          {this.stylesheets}\n\n          {/* (will be present only in development mode) */}\n          {/* outputs a <style/> tag with all bootstrap styles + App.scss + it could be CurrentPage.scss. */}\n          {/* can smoothen the initial style flash (flicker) on page load in development mode. */}\n          {/* ideally one could also include here the style for the current page (Home.scss, About.scss, etc) */}\n          { Object.keys(assets.styles).length === 0 ? <style dangerouslySetInnerHTML={{__html: require('../theme/bootstrap.config.js') + require('../containers/App/App.scss')._style}}/> : null }\n        </head>\n\n        <body>\n          <div id=\"content\" dangerouslySetInnerHTML={{__html: content}}/>\n          <script\n            dangerouslySetInnerHTML={{__html: `window.__data=${serialize(store.getState())};`}}\n            charSet=\"UTF-8\"\n          />\n          <script src={assets.javascript.main} charSet=\"UTF-8\"/>\n        </body>\n\n      </html>\n    );\n  }\n}\n"]}