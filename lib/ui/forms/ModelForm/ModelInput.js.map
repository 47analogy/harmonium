{"version":3,"sources":["../../../../src/ui/forms/ModelForm/ModelInput.es6"],"names":[],"mappings":";;;;;;;;;;;;AAAA,GAAG,CAAC,iBAAiB,CAAC,YAAY;YAAQ,UAAU;;eAAV,UAAU;;wBAC9B;AAClB,aAAO,CAAC,GAAG,CAAC,MAAM,CAAC,eAAe,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAA;KACrD;;;wBAEsB;AACrB,aAAO;AACL,aAAK,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU;AACxC,aAAK,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU;AACxC,YAAI,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;AAC5B,gBAAQ,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;OACjC,CAAA;KACF;;;AAED,WAdwC,UAAU,CActC,KAAK,EAAE;0BAdqB,UAAU;;uEAAV,UAAU,aAe1C,KAAK;;AAEX,UAAK,KAAK,GAAG;AACX,WAAK,EAAE,IAAI;KACZ,CAAA;;GACF;;eApBuC,UAAU;;6BAsBzC;;;AACP,UAAM,UAAU,GAAG;AACjB,oBAAY,EAAE,IAAI,CAAC,YAAY,EAAE;AACjC,YAAI,EAAE,IAAI,CAAC,IAAI,EAAE;OAClB,CAAA;;AAED,UAAG,IAAI,CAAC,UAAU,EAAE,EAAE;AACpB,kBAAU,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,EAAE,CAAA;OACzC;;AAED,UAAM,IAAI,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;eAAK,IAAI,KAAK,OAAK,KAAK,CAAC,IAAI;OAAA,CAAC,CAAA;;AAE5E,aACE;AAAC,WAAG,CAAC,UAAU,CAAC,KAAK;;AACnB,aAAG,EAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,SAAI,IAAI,CAAC,IAAI,EAAE,AAAG;AAC9C,aAAG,EAAE,IAAI,AAAC;WACN,UAAU,EACV,IAAI,CAAC,KAAK;AACd,kBAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,AAAC;AACnC,eAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,AAAC;AACxB,gBAAM,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,AAAC;;QAE9B,IAAI,CAAC,KAAK,CAAC,QAAQ;OACC,CACxB;KACF;;;yCAEoB;AACnB,UAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;KAClE;;;0CAEqB;AACpB,UAAI,CAAC,aAAa,EAAE,CAAA;KACrB;;;4BAEO,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE;AAC9B,UAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAA;;AAEvC,UAAG,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;AACrC,YAAI,CAAC,QAAQ,CAAC;AACZ,eAAK,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;SAC9C,CAAC,CAAA;OACH;KACF;;;6BAEQ,CAAC,EAAE;AACV,UAAI,CAAC,QAAQ,CAAC;AACZ,aAAK,EAAE,IAAI;OACZ,CAAC,CAAA;AACF,UAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAA;KACtB;;;SAxEuC,UAAU;GAAS,KAAK,CAAC,SAAS,EAyE1E,CAAA","file":"ModelInput.js","sourcesContent":["Rev.registerComponent('ModelInput', class ModelInput extends React.Component {\n  static get mixins() {\n    return [Rev.Mixins.ModelInputMixin, Backbone.Events]\n  }\n\n  static get propTypes() {\n    return {\n      field: React.PropTypes.string.isRequired,\n      model: React.PropTypes.object.isRequired,\n      name: React.PropTypes.string,\n      baseName: React.PropTypes.string,\n    }\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      error: null,\n    }\n  }\n\n  render() {\n    const formParams = {\n      defaultValue: this.defaultValue(),\n      name: this.name(),\n    }\n\n    if(this.isCheckbox()) {\n      formParams.defaultChecked = this.value()\n    }\n\n    const type = ['textarea', 'select'].find((item) => item === this.props.type)\n\n    return (\n      <Rev.Components.Input\n        key={`${this.props.model.cid}-${this.name()}`}\n        dom={type}\n        {...formParams}\n        {...this.props}\n        onChange={this.onChange.bind(this)}\n        error={this.state.error}\n        onBlur={this.onBlur.bind(this)}\n      >\n        {this.props.children}\n      </Rev.Components.Input>\n    )\n  }\n\n  componentWillMount() {\n    this.listenTo(this.props.model, 'error', this.onError.bind(this))\n  }\n\n  componentDidUnmount() {\n    this.stopListening()\n  }\n\n  onError(_model, resp, _options) {\n    const errors = resp.responseJSON.errors\n\n    if(errors && errors[this.props.field]) {\n      this.setState({\n        error: errors[this.props.field].join(' and '),\n      })\n    }\n  }\n\n  onChange(e) {\n    this.setState({\n      error: null,\n    })\n    this.onFieldChange(e)\n  }\n})\n"]}