{"version":3,"sources":["../../../../src/ui/forms/ModelForm/ModelHasManyInput.es6"],"names":[],"mappings":"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","file":"ModelHasManyInput.js","sourcesContent":["//= require backbone\n\nRev.registerComponent('ModelHasManyInput', class ModelHasManyInput extends React.Component {\n\n  static get mixins() {\n    return [Rev.Mixins.ModelInputMixin, Backbone.Events]\n  }\n\n  static get propTypes() {\n    return {\n      field: React.PropTypes.string.isRequired,\n      model: React.PropTypes.instanceOf(Backbone.Model).isRequired,\n      rowComponentClass: React.PropTypes.func,\n      controlComponentClass: React.PropTypes.func,\n    }\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      items: new Backbone.Collection(_.clone(this.value() || []), {model: Backbone.Model}),\n    }\n  }\n\n  addOne() {\n    this.state.items.push(new Backbone.Model())\n    this.forceUpdate()\n  }\n\n  removerFor(item) {\n    return (e) => {\n      if(e) {\n        e.preventDefault()\n      }\n      this.state.items.remove(item)\n      this.forceUpdate()\n    }\n  }\n\n  // HTML form input name prefix for fields in the \"nested\" model, following the\n  // rails convention\n  subFormBaseName(index) {\n    return `${this.props.baseName || this.klass()}[${this.props.field}_attributes][${index}]`\n  }\n\n  itemsAsObjects() {\n    return this.state.items.map((model) => model.toJSON())\n  }\n\n  // Format the hash of the nested models in the way Rails expects:\n  // e.g. { 0: { ... }, 1: { ... }, }\n  itemsForRails() {\n    return _.object(this.state.items.map((item, index) => [index, item]))\n  }\n\n  // The name of the has many attribute under the rails convention (e.g.\n  // nested_models_attributes)\n  fieldNameForRails() {\n    return `${this.props.field}_attributes`\n  }\n\n  bubbleUpNestedModelUpdates() {\n    // Standard backbone fields & events\n    this.props.model.set(this.props.field, this.itemsAsObjects())\n    this.props.model.trigger(`change:${this.props.field}`, this.itemsAsObjects())\n    // Also address the rails convention (nested_models_attributes)\n    this.props.model.set(this.fieldNameForRails(), this.itemsForRails())\n    this.props.model.trigger(`change:${this.fieldNameForRails()}`, this.itemsForRails())\n    // And the change any event\n    this.props.model.trigger('change')\n    // Redraw our grid\n    this.forceUpdate()\n  }\n\n  renderItem(item, index) {\n    const inner = React.createElement(this.props.rowComponentClass, {\n      index,\n      baseName: this.subFormBaseName(index),\n      model: item,\n      field: this.props.field,\n      parentModel: this.props.model,\n      addItem: this.addOne.bind(this),\n      removeItem: this.removerFor(item),\n    })\n\n    return <div key={item.cid}>{inner}</div>\n  }\n\n  get controlComponent() {\n    if(!this.props.controlComponentClass) {\n      return null\n    }\n    return React.createElement(this.props.controlComponentClass, {\n      items: this.state.items,\n      model: this.props.model,\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.items.map(this.renderItem.bind(this))}\n        {this.controlComponent}\n      </div>\n    )\n  }\n\n  componentWillMount() {\n    this.bubbleUpNestedModelUpdates()\n    this.listenTo(this.state.items, 'all', this.bubbleUpNestedModelUpdates.bind(this))\n  }\n\n  componentWillUnmount() {\n    this.stopListening()\n  }\n})\n"]}