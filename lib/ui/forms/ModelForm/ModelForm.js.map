{"version":3,"sources":["../../../../src/ui/forms/ModelForm/ModelForm.es6"],"names":[],"mappings":";;;;;;;;;;;;AAEA,GAAG,CAAC,iBAAiB,CAAC,WAAW;YAAQ,SAAS;;eAAT,SAAS;;wBAE5B;AAClB,aAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;KACzB;;;wBAEsB;AACrB,aAAO;AACL,aAAK,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU;OACzC,CAAA;KACF;;;AAED,WAZuC,SAAS,CAYpC,KAAK,EAAE;0BAZoB,SAAS;;uEAAT,SAAS,aAaxC,KAAK;;AAEX,UAAK,KAAK,GAAG;AACX,YAAM,EAAE,IAAI;KACb,CAAA;;GACF;;eAlBsC,SAAS;;6BAoBvC;UACA,IAAI,GAAI,GAAG,CAAC,UAAU,CAAtB,IAAI;;AAEX,aACE;AAAC,YAAI;;AACH,gBAAM,EAAC,MAAM;AACb,kBAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,AAAC;AACnC,gBAAM,EAAE,IAAI,CAAC,UAAU,EAAE,AAAC;AAC1B,mBAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,AAAC;AAChC,iBAAO,EAAC,qBAAqB;;QAE5B,IAAI,CAAC,KAAK,CAAC,QAAQ;OACf,CACR;KACF;;;iCAEY;AACX,aAAO,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAA;KACnD;;;iCAEY;AACX,UAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AACpB,eAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAA;OACzB;;AAED,UAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;AACnB,eAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,MAAM,GAAG,OAAO,CAAA;OACnD;;AAED,aAAO,MAAM,CAAA;KACd;;;wCAEmB;AAClB,UAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;KAClE;;;0CAEqB;AACpB,UAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;KACrC;;;4BAEO,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE;AAC9B,UAAI,CAAC,QAAQ,CAAC;AACZ,cAAM,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;OACjC,CAAC,CAAA;KACH;;;6BAEQ,CAAC,EAAE;AACV,OAAC,CAAC,cAAc,EAAE,CAAA;AAClB,UAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE;AAC1B,eAAO,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS;AAC7B,aAAK,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;OAC1B,CAAC,CAAA;KACH;;;SAxEsC,SAAS;GAAS,KAAK,CAAC,SAAS,EAyExE,CAAA","file":"ModelForm.js","sourcesContent":["// A form that works with Backbone models to do AJAXy submission & backbone\n// validation\nRev.registerComponent('ModelForm', class ModelForm extends React.Component {\n\n  static get mixins() {\n    return [Backbone.Events]\n  }\n\n  static get propTypes() {\n    return {\n      model: React.PropTypes.object.isRequired,\n    }\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      errors: null,\n    }\n  }\n\n  render() {\n    const {Form} = Rev.Components\n\n    return (\n      <Form\n        method=\"POST\"\n        onSubmit={this.onSubmit.bind(this)}\n        action={this.formAction()}\n        className={this.props.className}\n        encType=\"multipart/form-data\"\n      >\n        {this.props.children}\n      </Form>\n    )\n  }\n\n  formAction() {\n    return this.props.action || this.props.model.url()\n  }\n\n  formMethod() {\n    if(this.props.method) {\n      return this.props.method\n    }\n\n    if(this.props.model) {\n      return this.props.model.isNew() ? 'POST' : 'PATCH'\n    }\n\n    return 'POST'\n  }\n\n  componentDidMount() {\n    this.listenTo(this.props.model, 'error', this.onError.bind(this))\n  }\n\n  componentDidUnmount() {\n    this.stopListening(this.props.model)\n  }\n\n  onError(_model, resp, _options) {\n    this.setState({\n      errors: resp.responseJSON.errors,\n    })\n  }\n\n  onSubmit(e) {\n    e.preventDefault()\n    this.props.model.save(null, {\n      success: this.props.onSuccess,\n      error: this.props.onError,\n    })\n  }\n})\n"]}