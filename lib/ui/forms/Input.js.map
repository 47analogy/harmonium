{"version":3,"sources":["../../../src/ui/forms/Input.es6"],"names":[],"mappings":";;;;;;;;;;AAAA,GAAG,CAAC,iBAAiB,CAAC,OAAO;YAAQ,KAAK;;WAAL,KAAK;0BAAL,KAAK;;kEAAL,KAAK;;;eAAL,KAAK;;6BA+C/B;AACP,aAAO;;UAAO,SAAS,EAAE,IAAI,CAAC,cAAc,AAAC;QAC1C,IAAI,CAAC,wBAAwB,GAAG,IAAI,GAAG,IAAI,CAAC,UAAU;QACtD,IAAI,CAAC,KAAK;QACV,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI;QACtD,IAAI,CAAC,KAAK;OACL,CAAA;KACT;;;wBA7CkB;AACjB,aAAO,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAA;KACrE;;;wBAEoB;AACnB,UAAI,qBAAqB,GAAG;AAC1B,kBAAU,EAAE,IAAI;AAChB,yBAAiB,EAAE,IAAI;AACvB,eAAO,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI;OAClC,CAAA;AACD,2BAAqB,eAAa,IAAI,CAAC,YAAY,CAAG,GAAG,IAAI;AAAA,AAC7D,aAAO,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAA;KAC5C;;;wBAEW;AACV,UAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,OAAO,EAAE,WAAW,CAAC,CAAA;AAC7D,WAAK,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC9B,yBAAiB,EAAE,IAAI;AACvB,eAAO,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI;OAClC,CAAC,CAAA;AACF,aAAO,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;KACvE;;;wBAEgB;AACf,aAAO;;UAAM,SAAS,EAAC,sBAAsB;QAAE,IAAI,CAAC,KAAK,CAAC,KAAK;OAAQ,CAAA;KACxE;;;wBAEW;AACV,UAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;AACnB,eAAO;;YAAO,SAAS,EAAC,gBAAgB;UAAE,IAAI,CAAC,KAAK,CAAC,KAAK;SAAS,CAAA;OACpE;AACD,aAAO,IAAI,CAAA;KACZ;;;wBAE8B;AAC7B,aAAO,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,OAAO,CAAA;KACrE;;;wBA3CyB;AACxB,aAAO;AACL,WAAG,EAAE,OAAO;AACZ,YAAI,EAAE,MAAM;OACb,CAAA;KACF;;;SAPkC,KAAK;GAAS,KAAK,CAAC,SAAS,EAwDhE,CAAA","file":"Input.js","sourcesContent":["Rev.registerComponent('Input', class Input extends React.Component {\n\n  static get defaultProps() {\n    return {\n      dom: 'input',\n      type: 'text',\n    }\n  }\n\n  get typeClassMod() {\n    return this.props.dom === 'input' ? this.props.type : this.props.dom\n  }\n\n  get labelClassName() {\n    let labelClassNamesObject = {\n      'RevInput': true,\n      'RevInput--label': true,\n      'error': this.props.error != null,\n    }\n    labelClassNamesObject[`RevInput-${this.typeClassMod}`] = true // E.g., \"RevInput-checkbox\"\n    return this.classSet(labelClassNamesObject)\n  }\n\n  get input() {\n    let props = this.getPropsWithout('dom', 'error', 'className')\n    props.className = this.classAdd({\n      'RevInput--input': true,\n      'error': this.props.error != null,\n    })\n    return React.createElement(this.props.dom, props, this.props.children)\n  }\n\n  get innerLabel() {\n    return <span className=\"RevInput--innerLabel\">{this.props.label}</span>\n  }\n\n  get error() {\n    if(this.props.error) {\n      return <small className=\"RevError error\">{this.props.error}</small>\n    }\n    return null\n  }\n\n  get shouldPutLabelAfterInput() {\n    return this.props.type === 'checkbox' || this.props.type === 'radio'\n  }\n\n  render() {\n    return <label className={this.labelClassName}>\n      {this.shouldPutLabelAfterInput ? null : this.innerLabel}\n      {this.input}\n      {this.shouldPutLabelAfterInput ? this.innerLabel : null}\n      {this.error}\n    </label>\n  }\n\n})\n"]}