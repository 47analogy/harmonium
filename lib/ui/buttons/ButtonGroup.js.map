{"version":3,"sources":["../../../src/ui/buttons/ButtonGroup.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;kBAGe,kBAAQ,iBAAiB,CAAC,aAAa;YAAQ,WAAW;;WAAX,WAAW;0BAAX,WAAW;;kEAAX,WAAW;;;eAAX,WAAW;;6BAyC9D;AACP,aAAO;;UAAI,SAAS,EAAE,IAAI,CAAC,SAAS,AAAC;QAClC,IAAI,CAAC,WAAW,CAAC,UAAC,KAAK,EAAE,CAAC;iBAAK;;cAAI,GAAG,EAAE,CAAC,AAAC;YAAE,KAAK;WAAM;SAAA,CAAC;OACtD,CAAA;KACN;;;wBAvBe;AACd,UAAI,gBAAgB,GAAG;AACrB,wBAAgB,EAAE,IAAI;AACtB,sBAAc,EAAE,IAAI;AACpB,+BAAuB,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;AACzC,eAAO,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;AACzB,gCAAwB,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;AAC3C,gBAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;AAC3B,+BAAuB,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;AACzC,eAAO,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;AACzB,uCAA+B,EAAE,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa;AACxE,yBAAiB,EAAE,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa;OAC3D,CAAA;AACD,UAAG,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,EAAE;AAC1B,wBAAgB,WAAS,IAAI,CAAC,KAAK,CAAC,IAAI,CAAG,GAAG,IAAI,CAAA;OACnD;AACD,aAAO,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAA;KACvC;;;wBArCsB;AACrB,aAAO;AACL,aAAK,EAAE,gBAAM,SAAS,CAAC,IAAI;AAC3B,cAAM,EAAE,gBAAM,SAAS,CAAC,IAAI;AAC5B,YAAI,EAAE,gBAAM,SAAS,CAAC,MAAM;AAC5B,aAAK,EAAE,gBAAM,SAAS,CAAC,IAAI;AAC3B,qBAAa,EAAE,gBAAM,SAAS,CAAC,IAAI;OACpC,CAAA;KACF;;;wBAEyB;AACxB,aAAO;AACL,aAAK,EAAE,KAAK;AACZ,cAAM,EAAE,KAAK;AACb,YAAI,EAAE,IAAI;AACV,aAAK,EAAE,KAAK;AACZ,qBAAa,EAAE,KAAK;OACrB,CAAA;KACF;;;SApB2D,WAAW;GAAS,gBAAM,SAAS,EA8C/F","file":"ButtonGroup.js","sourcesContent":["import React from 'react'\nimport Revelry from '../../revelry'\n\nexport default Revelry.registerComponent('ButtonGroup', class ButtonGroup extends React.Component {\n\n  static get propTypes() {\n    return {\n      round: React.PropTypes.bool,\n      radius: React.PropTypes.bool,\n      even: React.PropTypes.number,\n      stack: React.PropTypes.bool,\n      stackForSmall: React.PropTypes.bool,\n    }\n  }\n\n  static get defaultProps() {\n    return {\n      round: false,\n      radius: false,\n      even: null,\n      stack: false,\n      stackForSmall: false,\n    }\n  }\n\n  get className() {\n    let classNamesObject = {\n      'RevButtonGroup': true,\n      'button-group': true,\n      'RevButtonGroup--round': this.props.round,\n      'round': this.props.round,\n      'RevButtonGroup--radius': this.props.radius,\n      'radius': this.props.radius,\n      'RevButtonGroup--stack': this.props.stack,\n      'stack': this.props.stack,\n      'RevButtonGroup--stackForSmall': !this.stack && this.props.stackForSmall,\n      'stack-for-small': !this.stack && this.props.stackForSmall,\n    }\n    if(this.props.even != null) {\n      classNamesObject[`even-${this.props.even}`] = true\n    }\n    return this.classAdd(classNamesObject)\n  }\n\n  render() {\n    return <ul className={this.className}>\n      {this.mapChildren((child, i) => <li key={i}>{child}</li>)}\n    </ul>\n  }\n})\n"]}