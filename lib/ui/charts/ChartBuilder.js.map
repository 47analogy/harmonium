{"version":3,"sources":["../../../src/ui/charts/ChartBuilder.es6"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAM,cAAc,GAAG;AACrB,KAAG,EAAE;AACH,kBAAc,EAAE;;AAEd,sBAAgB,EAAE,IAAI;AACtB,wBAAkB,EAAE,IAAI;AACxB,wBAAkB,EAAE,iBAAiB;AACrC,wBAAkB,EAAE,CAAC;;AAErB,6BAAuB,EAAE,IAAI;;AAE7B,2BAAqB,EAAE,KAAK;AAC5B,mBAAa,EAAE,IAAI;AACnB,oBAAc,EAAE,CAAC;;AAEjB,qBAAe,EAAE,CAAC;;AAElB,uBAAiB,EAAE,CAAC;;AAEpB,6BAAuB,EAAE,EAAE;;AAE3B,mBAAa,EAAE,IAAI;AACnB,wBAAkB,EAAE,CAAC;AACrB,iBAAW,EAAE,KAAK;KACnB;GACF;AACD,OAAK,EAAE;AACL,kBAAc,EAAE;AACd,uBAAiB,EAAE,IAAI;AACvB,wBAAkB,EAAE,MAAM;AAC1B,wBAAkB,EAAE,CAAC;AACrB,2BAAqB,EAAE,EAAE;AACzB,oBAAc,EAAE,GAAG;AACnB,qBAAe,EAAE,eAAe;AAChC,mBAAa,EAAE,IAAI;AACnB,kBAAY,EAAE,KAAK;KACpB;GACF;AACD,MAAI,EAAE;AACJ,kBAAc,EAAE;AACd,wBAAkB,EAAE,IAAI;AACxB,wBAAkB,EAAE,iBAAiB;AACrC,wBAAkB,EAAE,CAAC;AACrB,6BAAuB,EAAE,IAAI;AAC7B,2BAAqB,EAAE,KAAK;AAC5B,iBAAW,EAAE,KAAK;AAClB,wBAAkB,EAAE,GAAG;AACvB,cAAQ,EAAE,IAAI;AACd,oBAAc,EAAE,CAAC;AACjB,yBAAmB,EAAE,CAAC;AACtB,6BAAuB,EAAE,EAAE;AAC3B,mBAAa,EAAE,IAAI;AACnB,wBAAkB,EAAE,CAAC;AACrB,iBAAW,EAAE,KAAK;KACnB;GACF;AACD,KAAG,EAAE;AACH,kBAAc,EAAE;AACd,uBAAiB,EAAE,IAAI;AACvB,wBAAkB,EAAE,MAAM;AAC1B,wBAAkB,EAAE,CAAC;AACrB,2BAAqB,EAAE,CAAC;AACxB,oBAAc,EAAE,GAAG;AACnB,qBAAe,EAAE,eAAe;AAChC,mBAAa,EAAE,IAAI;AACnB,kBAAY,EAAE,KAAK;KACpB;GACF;AACD,OAAK,EAAE;AACL,kBAAc,EAAE;;AAEd,mBAAa,EAAE,IAAI;;AAEnB,sBAAgB,EAAE,IAAI;AACtB,qBAAe,EAAE,KAAK;AACtB,sBAAgB,EAAE,IAAI;;AAEtB,oBAAc,EAAE,gBAAgB;;AAEhC,oBAAc,EAAE,CAAC;AACjB,0BAAoB,EAAE,SAAS;AAC/B,yBAAmB,EAAE,QAAQ;AAC7B,wBAAkB,EAAE,EAAE;AACtB,yBAAmB,EAAE,MAAM;AAC3B,cAAQ,EAAE,IAAI;AACd,oBAAc,EAAE,CAAC;AACjB,yBAAmB,EAAE,CAAC;;AAEtB,6BAAuB,EAAE,EAAE;AAC3B,mBAAa,EAAE,IAAI;AACnB,wBAAkB,EAAE,CAAC;AACrB,iBAAW,EAAE,IAAI;KAClB;GACF;CACF,CAAA;;AAED,GAAG,CAAC,iBAAiB,CAAC,cAAc;YAAQ,YAAY;;WAAZ,YAAY;0BAAZ,YAAY;;kEAAZ,YAAY;;;eAAZ,YAAY;;kCAsCxC;AACZ,UAAG,OAAO,KAAK,KAAK,WAAW,EAAE;AAC/B,cAAM,IAAI,KAAK,qDAAuD,CAAA;OACvE;AACD,UAAG,IAAI,CAAC,MAAM,EAAE;AACd,cAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAA;OAC3D;AACD,UAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CACnD,IAAI,CAAC,KAAK,CAAC,IAAI,EACf,IAAI,CAAC,OAAO,CACb,CAAA;KACF;;;mCAEc;AACb,UAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;KACtB;;;wCAEmB;AAClB,UAAI,CAAC,WAAW,EAAE,CAAA;KACnB;;;2CAEsB;AACrB,UAAI,CAAC,YAAY,EAAE,CAAA;KACpB;;;6BAEQ;AACP,aACE;;;QACE;;YAAI,SAAS,EAAC,YAAY;UAAE,IAAI,CAAC,KAAK,CAAC,KAAK;SAAM;QAClD;AACE,aAAG,EAAC,QAAQ;AACZ,eAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,AAAC;AACxB,gBAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,AAAC;UAC1B;OACE,CACP;KACF;;;wBAtDS;AACR,aAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;KACtD;;;wBAEe;AACd,aAAO,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;KACvC;;;wBAEmB;AAClB,aAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAA;KACvB;;;wBAEa;AACZ,UAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAA;;AAE7D,aAAO,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;KAC/C;;;wBAnCsB;AACrB,aAAO;AACL,YAAI,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU;AACvC,YAAI,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,UAAU;AACnE,eAAO,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;AAC/B,aAAK,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;AAC7B,cAAM,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;AAC9B,aAAK,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;OAC9B,CAAA;KACF;;;wBAEyB;AACxB,aAAO;AACL,aAAK,EAAE,aAAa;AACpB,aAAK,EAAE,GAAG;AACV,cAAM,EAAE,GAAG;OACZ,CAAA;KACF;;;SAlByC,YAAY;GAAS,KAAK,CAAC,SAAS,EA2E9E,CAAA","file":"ChartBuilder.js","sourcesContent":["const REV_CHART_SPEC = {\n  Bar: {\n    defaultOptions: {\n      // Whether the scale should start at zero, or an order of magnitude down from the lowest value\n      scaleBeginAtZero: true,\n      scaleShowGridLines: true,\n      scaleGridLineColor: 'rgba(0,0,0,.05)',\n      scaleGridLineWidth: 1,\n      // Whether to show horizontal lines (except X axis)\n      scaleShowHorizontalLine: true,\n      // Whether to show vertical lines (except Y axis)\n      scaleShowVerticalLine: false,\n      barShowStroke: true,\n      barStrokeWidth: 2,\n      // Spacing between each of the X value sets\n      barValueSpacing: 5,\n      // Spacing between data sets within X values\n      barDatasetSpacing: 1,\n      // Amount extra to add to the radius to cater for hit detection outside the drawn point\n      pointHitDetectionRadius: 20,\n      // Whether to show a stroke for datasets\n      datasetStroke: true,\n      datasetStrokeWidth: 2,\n      datasetFill: false,\n    },\n  },\n  Donut: {\n    defaultOptions: {\n      segmentShowStroke: true,\n      segmentStrokeColor: '#fff',\n      segmentStrokeWidth: 2,\n      percentageInnerCutout: 50,\n      animationSteps: 100,\n      animationEasing: 'easeOutBounce',\n      animateRotate: true,\n      animateScale: false,\n    },\n  },\n  Line: {\n    defaultOptions: {\n      scaleShowGridLines: true,\n      scaleGridLineColor: 'rgba(0,0,0,.05)',\n      scaleGridLineWidth: 1,\n      scaleShowHorizontalLine: true,\n      scaleShowVerticalLine: false,\n      bezierCurve: false,\n      bezierCurveTension: 0.4,\n      pointDot: true,\n      pointDotRadius: 4,\n      pointDotStrokeWidth: 1,\n      pointHitDetectionRadius: 20,\n      datasetStroke: true,\n      datasetStrokeWidth: 2,\n      datasetFill: false,\n    },\n  },\n  Pie: {\n    defaultOptions: {\n      segmentShowStroke: true,\n      segmentStrokeColor: '#fff',\n      segmentStrokeWidth: 2,\n      percentageInnerCutout: 0,\n      animationSteps: 100,\n      animationEasing: 'easeOutBounce',\n      animateRotate: true,\n      animateScale: false,\n    },\n  },\n  Radar: {\n    defaultOptions: {\n      // Whether to show lines for each scale point\n      scaleShowLine: true,\n      // Whether we show the angle lines out of the radar\n      angleShowLineOut: true,\n      scaleShowLabels: false,\n      scaleBeginAtZero: true,\n      // Colour of the angle line\n      angleLineColor: 'rgba(0,0,0,.1)',\n      // Pixel width of the angle line\n      angleLineWidth: 1,\n      pointLabelFontFamily: \"'Arial'\",\n      pointLabelFontStyle: 'normal',\n      pointLabelFontSize: 10,\n      pointLabelFontColor: '#666',\n      pointDot: true,\n      pointDotRadius: 3,\n      pointDotStrokeWidth: 1,\n      // amount extra to add to the radius to cater for hit detection outside the drawn point\n      pointHitDetectionRadius: 20,\n      datasetStroke: true,\n      datasetStrokeWidth: 2,\n      datasetFill: true,\n    },\n  },\n}\n\nRev.registerComponent('ChartBuilder', class ChartBuilder extends React.Component {\n  static get propTypes() {\n    return {\n      data: React.PropTypes.object.isRequired,\n      type: React.PropTypes.oneOf(Object.keys(REV_CHART_SPEC)).isRequired,\n      options: React.PropTypes.object,\n      width: React.PropTypes.number,\n      height: React.PropTypes.number,\n      title: React.PropTypes.string,\n    }\n  }\n\n  static get defaultProps() {\n    return {\n      title: 'Chart Title',\n      width: 300,\n      height: 300,\n    }\n  }\n\n  get ctx() {\n    return this.refs.canvas.getDOMNode().getContext('2d')\n  }\n\n  get chartSpec() {\n    return REV_CHART_SPEC[this.props.type]\n  }\n\n  get chartFuncName() {\n    return this.props.type\n  }\n\n  get options() {\n    const opts = Object.assign({}, this.chartSpec.defaultOptions)\n\n    return Object.assign(opts, this.props.options)\n  }\n\n  createChart() {\n    if(typeof Chart === 'undefined') {\n      throw new Error(`Global \\`Chart\\` is undefined - Is Chart.js loaded?`)\n    }\n    if(this._chart) {\n      throw new Error('`createChart` may only be called once.`')\n    }\n    this._chart = new Chart(this.ctx)[this.chartFuncName](\n      this.props.data,\n      this.options,\n    )\n  }\n\n  destroyChart() {\n    this._chart.destroy()\n  }\n\n  componentDidMount() {\n    this.createChart()\n  }\n\n  componentWillUnmount() {\n    this.destroyChart()\n  }\n\n  render() {\n    return (\n      <div>\n        <h3 className=\"ChartTitle\">{this.props.title}</h3>\n        <canvas\n          ref=\"canvas\"\n          width={this.props.width}\n          height={this.props.height}\n        />\n      </div>\n    )\n  }\n})\n"]}